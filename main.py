import re

def main():
    while True:
        print("\n" + "="*50)
        a = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä README —Ñ–∞–π–ª–∞ (1-4) –∏–ª–∏ 'new' –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: ")
        print("–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞–ø–∏—à–∏—Ç–µ 'end'")
        
        if a.lower() == "end":
            break
        elif a.lower() == "new":
            input_new_data()
        else:
            parse_readme(a)


def input_new(profile):
                    
                    Kollej = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–ª–µ–¥–∂–∞: ") 
                    Kurs = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: ") 
                    FI = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò (—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª): ") 
                    Team = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: ")
                    ID = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à ID: ")
                    content =f"""
# studyproject
–ö–æ–ª–ª–µ–¥–∂: {Kollej}
–ö—É—Ä—Å: {Kurs}
–§–ò: {FI}
–ö–æ–º–∞–Ω–¥–∞: {Team} 
ID: {ID}
                    """
                    with open(f'README00{profile}.md', 'w', encoding='utf-8') as file:
                        file.write(content)
                    return Kollej, Kurs, FI, Team, ID

def parse_readme(number):
    """
    –§—É–Ω–∫—Ü–∏—è —á–∏—Ç–∞–µ—Ç –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–∞–π–ª READMEE.md, —á—Ç–æ–±—ã –∏–∑–≤–ª–µ—á—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
    """
    college = None
    course = None
    name = None
    group = None
    id = None
    
    try:
        with open(f'README00{number}.md', 'r', encoding='utf-8') as file:
            content = file.read()
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
            college_match = re.search(r'–ö–æ–ª–ª–µ–¥–∂:\s*(.+)', content)
            course_match = re.search(r'–ö—É—Ä—Å:\s*(.+)', content)  # –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –æ–ø–µ—á–∞—Ç–∫—É –≤ "–ö—É—Äc"
            name_match = re.search(r'–§–ò:\s*(.+)', content)
            group_match = re.search(r'–ö–æ–º–∞–Ω–¥–∞:\s*(.+)', content)  # –ò –∑–¥–µ—Å—å "–ö–æ–º–∞–Ω–¥–∞"
            id_match = re.search(r'ID:\s*(.+)', content)  # –ò –∑–¥–µ—Å—å "–ö–æ–º–∞–Ω–¥–∞"
            
            if college_match:
                college = college_match.group(1).strip()
            if course_match:
                course = course_match.group(1).strip()
            if name_match:
                name = name_match.group(1).strip()
            if group_match:
                group = group_match.group(1).strip()
            if id_match:
                id = id_match.group(1).strip()

            print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞!")
            print()
            print("=" * 50)
            print(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}!") 
            print(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ {college}")
            print(f"–ö—É—Ä—Å: {course}")
            print(f"–ö–æ–º–∞–Ω–¥–∞: {group}")
            print(f"ID {id}")
            print("=" * 50)
            print()
            print("–ñ–µ–ª–∞–µ–º —É—Å–ø–µ—Ö–æ–≤ –≤ –æ–±—É—á–µ–Ω–∏–∏! üöÄ")
                
    except FileNotFoundError:
        b = input("–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? (–î–∞/–ù–µ—Ç)\n") 
        if b == "–î–∞":
            input_new(number)
    
    return college, course, name, group, id


        
if __name__ == "__main__":
    main()